Activity_main.xml:-

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <!-- Text Input field -->
    <EditText
        android:id="@+id/et_input_text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:hint="Enter text here"
        android:textSize="18sp"
        android:padding="12dp"/>

    <!-- Speak Button -->
    <Button
        android:id="@+id/btn_speak"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="Speak"
        android:textSize="18sp"
        android:padding="12dp"
        android:layout_marginTop="20dp" />

</LinearLayout>

———————————————————————————————————————————————————————————————————————

MainActivity.java:-

package com.mad.text_speech;

import android.os.Bundle;
import android.speech.tts.TextToSpeech;
import android.speech.tts.TextToSpeech.OnInitListener;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

import java.util.Locale;

public class MainActivity extends AppCompatActivity implements OnInitListener {

    private TextToSpeech textToSpeech;
    private EditText etInputText;
    private Button btnSpeak;
    private boolean isInitialized = false; // Flag to track TTS initialization status

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize views
        etInputText = findViewById(R.id.et_input_text);
        btnSpeak = findViewById(R.id.btn_speak);

        // Initialize TextToSpeech (as soon as the activity is created)
        textToSpeech = new TextToSpeech(this, this);

        // Set click listener for the button
        btnSpeak.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                String text = etInputText.getText().toString();
                if (!text.isEmpty()) {
                    if (isInitialized) {
                        speakOut(text);  // Speak immediately if TTS is initialized
                    } else {
                        Toast.makeText(MainActivity.this, "Please wait, initializing TTS...", Toast.LENGTH_SHORT).show();
                    }
                } else {
                    Toast.makeText(MainActivity.this, "Please enter some text", Toast.LENGTH_SHORT).show();
                }
            }
        });
    }

    @Override
    public void onInit(int status) {
        if (status == TextToSpeech.SUCCESS) {
            int langResult = textToSpeech.setLanguage(Locale.US);
            if (langResult == TextToSpeech.LANG_MISSING_DATA || langResult == TextToSpeech.LANG_NOT_SUPPORTED) {
                Toast.makeText(this, "Language not supported or missing data", Toast.LENGTH_SHORT).show();
            } else {
                isInitialized = true; // Set flag to true when TTS is initialized
                btnSpeak.setEnabled(true); // Enable the button when TTS is ready
                Toast.makeText(this, "TTS Initialized", Toast.LENGTH_SHORT).show();
            }
        } else {
            Toast.makeText(this, "Initialization failed", Toast.LENGTH_SHORT).show();
        }
    }

    // Method to speak the text entered by the user
    private void speakOut(String text) {
        // Immediate speaking once TTS is ready
        textToSpeech.speak(text, TextToSpeech.QUEUE_FLUSH, null, null);
    }

    @Override
    protected void onDestroy() {
        if (textToSpeech != null) {
            textToSpeech.stop();
            textToSpeech.shutdown();
        }
        super.onDestroy();
    }
}

———————————————————————————————————————————————————————————————————————

AndroidManifest.xml:-

<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.mad.text_speech">

    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="TextToSpeechApp"
        android:theme="@style/Theme.AppCompat.DayNight">

        <activity android:name=".MainActivity"
            android:label="Text To Voice"
            android:theme="@style/Theme.AppCompat.DayNight"
            android:exported="true"> <!-- Set android:exported to true for launcher activity -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
